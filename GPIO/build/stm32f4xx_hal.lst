ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_hal.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_MspInit:
  26              	.LFB130:
  27              		.file 1 "Core/Src/stm32f4xx_hal.c"
   1:Core/Src/stm32f4xx_hal.c **** /**
   2:Core/Src/stm32f4xx_hal.c ****   ******************************************************************************
   3:Core/Src/stm32f4xx_hal.c ****   * @file    stm32f4xx_hal.c
   4:Core/Src/stm32f4xx_hal.c ****   * @author  MCD Application Team
   5:Core/Src/stm32f4xx_hal.c ****   * @brief   HAL module driver.
   6:Core/Src/stm32f4xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Core/Src/stm32f4xx_hal.c ****   *
   8:Core/Src/stm32f4xx_hal.c ****   ******************************************************************************
   9:Core/Src/stm32f4xx_hal.c ****   * @attention
  10:Core/Src/stm32f4xx_hal.c ****   *
  11:Core/Src/stm32f4xx_hal.c ****   * Copyright (c) 2017 STMicroelectronics.
  12:Core/Src/stm32f4xx_hal.c ****   * All rights reserved.
  13:Core/Src/stm32f4xx_hal.c ****   *
  14:Core/Src/stm32f4xx_hal.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Core/Src/stm32f4xx_hal.c ****   * in the root directory of this software component.
  16:Core/Src/stm32f4xx_hal.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Core/Src/stm32f4xx_hal.c ****   *
  18:Core/Src/stm32f4xx_hal.c ****   ******************************************************************************
  19:Core/Src/stm32f4xx_hal.c ****   @verbatim
  20:Core/Src/stm32f4xx_hal.c ****   ==============================================================================
  21:Core/Src/stm32f4xx_hal.c ****                      ##### How to use this driver #####
  22:Core/Src/stm32f4xx_hal.c ****   ==============================================================================
  23:Core/Src/stm32f4xx_hal.c ****     [..]
  24:Core/Src/stm32f4xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  25:Core/Src/stm32f4xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  26:Core/Src/stm32f4xx_hal.c ****     [..]
  27:Core/Src/stm32f4xx_hal.c ****     The HAL contains two APIs' categories: 
  28:Core/Src/stm32f4xx_hal.c ****          (+) Common HAL APIs
  29:Core/Src/stm32f4xx_hal.c ****          (+) Services HAL APIs
  30:Core/Src/stm32f4xx_hal.c **** 
  31:Core/Src/stm32f4xx_hal.c ****   @endverbatim
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 2


  32:Core/Src/stm32f4xx_hal.c ****   ******************************************************************************
  33:Core/Src/stm32f4xx_hal.c ****   */ 
  34:Core/Src/stm32f4xx_hal.c **** 
  35:Core/Src/stm32f4xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Core/Src/stm32f4xx_hal.c **** #include "stm32f4xx_hal.h"
  37:Core/Src/stm32f4xx_hal.c **** 
  38:Core/Src/stm32f4xx_hal.c **** /** @addtogroup STM32F4xx_HAL_Driver
  39:Core/Src/stm32f4xx_hal.c ****   * @{
  40:Core/Src/stm32f4xx_hal.c ****   */
  41:Core/Src/stm32f4xx_hal.c **** 
  42:Core/Src/stm32f4xx_hal.c **** /** @defgroup HAL HAL
  43:Core/Src/stm32f4xx_hal.c ****   * @brief HAL module driver.
  44:Core/Src/stm32f4xx_hal.c ****   * @{
  45:Core/Src/stm32f4xx_hal.c ****   */
  46:Core/Src/stm32f4xx_hal.c **** 
  47:Core/Src/stm32f4xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Core/Src/stm32f4xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Core/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Core/Src/stm32f4xx_hal.c ****   * @{
  51:Core/Src/stm32f4xx_hal.c ****   */
  52:Core/Src/stm32f4xx_hal.c **** /**
  53:Core/Src/stm32f4xx_hal.c ****   * @brief STM32F4xx HAL Driver version number V1.8.3
  54:Core/Src/stm32f4xx_hal.c ****   */
  55:Core/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  56:Core/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x08U) /*!< [23:16] sub1 version */
  57:Core/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x03U) /*!< [15:8]  sub2 version */
  58:Core/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  59:Core/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24U)\
  60:Core/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16U)\
  61:Core/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8U )\
  62:Core/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  63:Core/Src/stm32f4xx_hal.c ****                                         
  64:Core/Src/stm32f4xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  65:Core/Src/stm32f4xx_hal.c **** 
  66:Core/Src/stm32f4xx_hal.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  67:Core/Src/stm32f4xx_hal.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  68:Core/Src/stm32f4xx_hal.c **** /* ---  MEMRMP Register ---*/ 
  69:Core/Src/stm32f4xx_hal.c **** /* Alias word address of UFB_MODE bit */ 
  70:Core/Src/stm32f4xx_hal.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  71:Core/Src/stm32f4xx_hal.c **** #define UFB_MODE_BIT_NUMBER       SYSCFG_MEMRMP_UFB_MODE_Pos
  72:Core/Src/stm32f4xx_hal.c **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32U) + (UFB_MODE_BIT
  73:Core/Src/stm32f4xx_hal.c **** 
  74:Core/Src/stm32f4xx_hal.c **** /* ---  CMPCR Register ---*/ 
  75:Core/Src/stm32f4xx_hal.c **** /* Alias word address of CMP_PD bit */ 
  76:Core/Src/stm32f4xx_hal.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20U) 
  77:Core/Src/stm32f4xx_hal.c **** #define CMP_PD_BIT_NUMBER         SYSCFG_CMPCR_CMP_PD_Pos
  78:Core/Src/stm32f4xx_hal.c **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32U) + (CMP_PD_BIT_NU
  79:Core/Src/stm32f4xx_hal.c **** 
  80:Core/Src/stm32f4xx_hal.c **** /* ---  MCHDLYCR Register ---*/ 
  81:Core/Src/stm32f4xx_hal.c **** /* Alias word address of BSCKSEL bit */ 
  82:Core/Src/stm32f4xx_hal.c **** #define MCHDLYCR_OFFSET            (SYSCFG_OFFSET + 0x30U) 
  83:Core/Src/stm32f4xx_hal.c **** #define BSCKSEL_BIT_NUMBER         SYSCFG_MCHDLYCR_BSCKSEL_Pos
  84:Core/Src/stm32f4xx_hal.c **** #define MCHDLYCR_BSCKSEL_BB        (uint32_t)(PERIPH_BB_BASE + (MCHDLYCR_OFFSET * 32U) + (BSCKSEL_B
  85:Core/Src/stm32f4xx_hal.c **** /**
  86:Core/Src/stm32f4xx_hal.c ****   * @}
  87:Core/Src/stm32f4xx_hal.c ****   */
  88:Core/Src/stm32f4xx_hal.c **** 
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 3


  89:Core/Src/stm32f4xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  90:Core/Src/stm32f4xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  91:Core/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Variables
  92:Core/Src/stm32f4xx_hal.c ****   * @{
  93:Core/Src/stm32f4xx_hal.c ****   */
  94:Core/Src/stm32f4xx_hal.c **** __IO uint32_t uwTick;
  95:Core/Src/stm32f4xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  96:Core/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  97:Core/Src/stm32f4xx_hal.c **** /**
  98:Core/Src/stm32f4xx_hal.c ****   * @}
  99:Core/Src/stm32f4xx_hal.c ****   */
 100:Core/Src/stm32f4xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 101:Core/Src/stm32f4xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 102:Core/Src/stm32f4xx_hal.c **** 
 103:Core/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 104:Core/Src/stm32f4xx_hal.c ****   * @{
 105:Core/Src/stm32f4xx_hal.c ****   */
 106:Core/Src/stm32f4xx_hal.c **** 
 107:Core/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 108:Core/Src/stm32f4xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 109:Core/Src/stm32f4xx_hal.c ****  *
 110:Core/Src/stm32f4xx_hal.c **** @verbatim    
 111:Core/Src/stm32f4xx_hal.c ****  ===============================================================================
 112:Core/Src/stm32f4xx_hal.c ****               ##### Initialization and Configuration functions #####
 113:Core/Src/stm32f4xx_hal.c ****  ===============================================================================
 114:Core/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 115:Core/Src/stm32f4xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 116:Core/Src/stm32f4xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 117:Core/Src/stm32f4xx_hal.c ****           and the backup domain when enabled.
 118:Core/Src/stm32f4xx_hal.c ****       (+) De-Initializes common part of the HAL.
 119:Core/Src/stm32f4xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 120:Core/Src/stm32f4xx_hal.c ****           Tick interrupt priority. 
 121:Core/Src/stm32f4xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 122:Core/Src/stm32f4xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 123:Core/Src/stm32f4xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 124:Core/Src/stm32f4xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 125:Core/Src/stm32f4xx_hal.c ****              handled in milliseconds basis.
 126:Core/Src/stm32f4xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 127:Core/Src/stm32f4xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 128:Core/Src/stm32f4xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 129:Core/Src/stm32f4xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 130:Core/Src/stm32f4xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 131:Core/Src/stm32f4xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 132:Core/Src/stm32f4xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 133:Core/Src/stm32f4xx_hal.c ****             ISR process will be blocked. 
 134:Core/Src/stm32f4xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 135:Core/Src/stm32f4xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 136:Core/Src/stm32f4xx_hal.c **** @endverbatim
 137:Core/Src/stm32f4xx_hal.c ****   * @{
 138:Core/Src/stm32f4xx_hal.c ****   */
 139:Core/Src/stm32f4xx_hal.c **** 
 140:Core/Src/stm32f4xx_hal.c **** /**
 141:Core/Src/stm32f4xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 142:Core/Src/stm32f4xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 143:Core/Src/stm32f4xx_hal.c ****   *         HAL function), it performs the following:
 144:Core/Src/stm32f4xx_hal.c ****   *           Configure the Flash prefetch, instruction and Data caches.
 145:Core/Src/stm32f4xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 4


 146:Core/Src/stm32f4xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 147:Core/Src/stm32f4xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 148:Core/Src/stm32f4xx_hal.c ****   *           Set NVIC Group Priority to 4.
 149:Core/Src/stm32f4xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 150:Core/Src/stm32f4xx_hal.c ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 151:Core/Src/stm32f4xx_hal.c ****   *            
 152:Core/Src/stm32f4xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 153:Core/Src/stm32f4xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 154:Core/Src/stm32f4xx_hal.c ****   *         to have correct HAL operation.
 155:Core/Src/stm32f4xx_hal.c ****   * @retval HAL status
 156:Core/Src/stm32f4xx_hal.c ****   */
 157:Core/Src/stm32f4xx_hal.c **** 
 158:Core/Src/stm32f4xx_hal.c **** 
 159:Core/Src/stm32f4xx_hal.c **** /**
 160:Core/Src/stm32f4xx_hal.c ****   * @brief  Initialize the MSP.
 161:Core/Src/stm32f4xx_hal.c ****   * @retval None
 162:Core/Src/stm32f4xx_hal.c ****   */
 163:Core/Src/stm32f4xx_hal.c **** __weak void HAL_MspInit(void)
 164:Core/Src/stm32f4xx_hal.c **** {
  28              		.loc 1 164 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE130:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HAL_MspDeInit:
  46              	.LFB131:
 165:Core/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 166:Core/Src/stm32f4xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 167:Core/Src/stm32f4xx_hal.c ****    */
 168:Core/Src/stm32f4xx_hal.c **** }
 169:Core/Src/stm32f4xx_hal.c **** 
 170:Core/Src/stm32f4xx_hal.c **** /**
 171:Core/Src/stm32f4xx_hal.c ****   * @brief  DeInitializes the MSP.
 172:Core/Src/stm32f4xx_hal.c ****   * @retval None
 173:Core/Src/stm32f4xx_hal.c ****   */
 174:Core/Src/stm32f4xx_hal.c **** __weak void HAL_MspDeInit(void)
 175:Core/Src/stm32f4xx_hal.c **** {
  47              		.loc 1 175 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52 0000 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE131:
  56              		.section	.text.HAL_InitTick,"ax",%progbits
  57              		.align	1
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 5


  58              		.weak	HAL_InitTick
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  62              		.fpu fpv4-sp-d16
  64              	HAL_InitTick:
  65              	.LFB132:
 176:Core/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 177:Core/Src/stm32f4xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 178:Core/Src/stm32f4xx_hal.c ****    */ 
 179:Core/Src/stm32f4xx_hal.c **** }
 180:Core/Src/stm32f4xx_hal.c **** 
 181:Core/Src/stm32f4xx_hal.c **** /**
 182:Core/Src/stm32f4xx_hal.c ****   * @brief This function configures the source of the time base.
 183:Core/Src/stm32f4xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 184:Core/Src/stm32f4xx_hal.c ****   *        Tick interrupt priority.
 185:Core/Src/stm32f4xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 186:Core/Src/stm32f4xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 187:Core/Src/stm32f4xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 188:Core/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 189:Core/Src/stm32f4xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 190:Core/Src/stm32f4xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 191:Core/Src/stm32f4xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 192:Core/Src/stm32f4xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 193:Core/Src/stm32f4xx_hal.c ****   *       implementation  in user file.
 194:Core/Src/stm32f4xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 195:Core/Src/stm32f4xx_hal.c ****   * @retval HAL status
 196:Core/Src/stm32f4xx_hal.c ****   */
 197:Core/Src/stm32f4xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 198:Core/Src/stm32f4xx_hal.c **** {
  66              		.loc 1 198 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              	.LVL0:
  71              		.loc 1 198 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
  77 0002 0446     		mov	r4, r0
  78              	.LBB2:
 199:Core/Src/stm32f4xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 200:Core/Src/stm32f4xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
  79              		.loc 1 200 0
  80 0004 0E4B     		ldr	r3, .L9
  81 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  82              	.LVL1:
  83 0008 4FF47A73 		mov	r3, #1000
  84 000c B3FBF0F3 		udiv	r3, r3, r0
  85 0010 0C4A     		ldr	r2, .L9+4
  86 0012 1068     		ldr	r0, [r2]
  87 0014 B0FBF3F0 		udiv	r0, r0, r3
  88 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
  89              	.LVL2:
  90 001c 68B9     		cbnz	r0, .L5
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 6


  91              	.LBE2:
 201:Core/Src/stm32f4xx_hal.c ****   {
 202:Core/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 203:Core/Src/stm32f4xx_hal.c ****   }
 204:Core/Src/stm32f4xx_hal.c **** 
 205:Core/Src/stm32f4xx_hal.c ****   /* Configure the SysTick IRQ priority */
 206:Core/Src/stm32f4xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
  92              		.loc 1 206 0
  93 001e 0F2C     		cmp	r4, #15
  94 0020 01D9     		bls	.L8
 207:Core/Src/stm32f4xx_hal.c ****   {
 208:Core/Src/stm32f4xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 209:Core/Src/stm32f4xx_hal.c ****     uwTickPrio = TickPriority;
 210:Core/Src/stm32f4xx_hal.c ****   }
 211:Core/Src/stm32f4xx_hal.c ****   else
 212:Core/Src/stm32f4xx_hal.c ****   {
 213:Core/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
  95              		.loc 1 213 0
  96 0022 0120     		movs	r0, #1
 214:Core/Src/stm32f4xx_hal.c ****   }
 215:Core/Src/stm32f4xx_hal.c **** 
 216:Core/Src/stm32f4xx_hal.c ****   /* Return function status */
 217:Core/Src/stm32f4xx_hal.c ****   return HAL_OK;
 218:Core/Src/stm32f4xx_hal.c **** }
  97              		.loc 1 218 0
  98 0024 10BD     		pop	{r4, pc}
  99              	.LVL3:
 100              	.L8:
 101              	.LBB3:
 208:Core/Src/stm32f4xx_hal.c ****     uwTickPrio = TickPriority;
 102              		.loc 1 208 0
 103 0026 0022     		movs	r2, #0
 104 0028 2146     		mov	r1, r4
 105 002a 4FF0FF30 		mov	r0, #-1
 106 002e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 107              	.LVL4:
 209:Core/Src/stm32f4xx_hal.c ****   }
 108              		.loc 1 209 0
 109 0032 054B     		ldr	r3, .L9+8
 110 0034 1C60     		str	r4, [r3]
 111              	.LBE3:
 217:Core/Src/stm32f4xx_hal.c **** }
 112              		.loc 1 217 0
 113 0036 0020     		movs	r0, #0
 114 0038 10BD     		pop	{r4, pc}
 115              	.LVL5:
 116              	.L5:
 117              	.LBB4:
 202:Core/Src/stm32f4xx_hal.c ****   }
 118              		.loc 1 202 0
 119 003a 0120     		movs	r0, #1
 120 003c 10BD     		pop	{r4, pc}
 121              	.LVL6:
 122              	.L10:
 123 003e 00BF     		.align	2
 124              	.L9:
 125 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 7


 126 0044 00000000 		.word	SystemCoreClock
 127 0048 00000000 		.word	.LANCHOR1
 128              	.LBE4:
 129              		.cfi_endproc
 130              	.LFE132:
 132              		.section	.text.HAL_IncTick,"ax",%progbits
 133              		.align	1
 134              		.weak	HAL_IncTick
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 138              		.fpu fpv4-sp-d16
 140              	HAL_IncTick:
 141              	.LFB133:
 219:Core/Src/stm32f4xx_hal.c **** 
 220:Core/Src/stm32f4xx_hal.c **** /**
 221:Core/Src/stm32f4xx_hal.c ****   * @}
 222:Core/Src/stm32f4xx_hal.c ****   */
 223:Core/Src/stm32f4xx_hal.c **** 
 224:Core/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 225:Core/Src/stm32f4xx_hal.c ****  *  @brief    HAL Control functions
 226:Core/Src/stm32f4xx_hal.c ****  *
 227:Core/Src/stm32f4xx_hal.c **** @verbatim
 228:Core/Src/stm32f4xx_hal.c ****  ===============================================================================
 229:Core/Src/stm32f4xx_hal.c ****                       ##### HAL Control functions #####
 230:Core/Src/stm32f4xx_hal.c ****  ===============================================================================
 231:Core/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 232:Core/Src/stm32f4xx_hal.c ****       (+) Provide a tick value in millisecond
 233:Core/Src/stm32f4xx_hal.c ****       (+) Provide a blocking delay in millisecond
 234:Core/Src/stm32f4xx_hal.c ****       (+) Suspend the time base source interrupt
 235:Core/Src/stm32f4xx_hal.c ****       (+) Resume the time base source interrupt
 236:Core/Src/stm32f4xx_hal.c ****       (+) Get the HAL API driver version
 237:Core/Src/stm32f4xx_hal.c ****       (+) Get the device identifier
 238:Core/Src/stm32f4xx_hal.c ****       (+) Get the device revision identifier
 239:Core/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 240:Core/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 241:Core/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 242:Core/Src/stm32f4xx_hal.c **** 
 243:Core/Src/stm32f4xx_hal.c **** @endverbatim
 244:Core/Src/stm32f4xx_hal.c ****   * @{
 245:Core/Src/stm32f4xx_hal.c ****   */
 246:Core/Src/stm32f4xx_hal.c **** 
 247:Core/Src/stm32f4xx_hal.c **** /**
 248:Core/Src/stm32f4xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 249:Core/Src/stm32f4xx_hal.c ****   *        used as application time base.
 250:Core/Src/stm32f4xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 251:Core/Src/stm32f4xx_hal.c ****   *       in SysTick ISR.
 252:Core/Src/stm32f4xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 253:Core/Src/stm32f4xx_hal.c ****   *      implementations in user file.
 254:Core/Src/stm32f4xx_hal.c ****   * @retval None
 255:Core/Src/stm32f4xx_hal.c ****   */
 256:Core/Src/stm32f4xx_hal.c **** __weak void HAL_IncTick(void)
 257:Core/Src/stm32f4xx_hal.c **** {
 142              		.loc 1 257 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 8


 146              		@ link register save eliminated.
 258:Core/Src/stm32f4xx_hal.c ****   uwTick += uwTickFreq;
 147              		.loc 1 258 0
 148 0000 034A     		ldr	r2, .L12
 149 0002 1168     		ldr	r1, [r2]
 150 0004 034B     		ldr	r3, .L12+4
 151 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 152 0008 0B44     		add	r3, r3, r1
 153 000a 1360     		str	r3, [r2]
 154 000c 7047     		bx	lr
 155              	.L13:
 156 000e 00BF     		.align	2
 157              	.L12:
 158 0010 00000000 		.word	uwTick
 159 0014 00000000 		.word	.LANCHOR0
 160              		.cfi_endproc
 161              	.LFE133:
 163              		.section	.text.HAL_GetTick,"ax",%progbits
 164              		.align	1
 165              		.weak	HAL_GetTick
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	HAL_GetTick:
 172              	.LFB134:
 259:Core/Src/stm32f4xx_hal.c **** }
 260:Core/Src/stm32f4xx_hal.c **** 
 261:Core/Src/stm32f4xx_hal.c **** /**
 262:Core/Src/stm32f4xx_hal.c ****   * @brief Provides a tick value in millisecond.
 263:Core/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 264:Core/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 265:Core/Src/stm32f4xx_hal.c ****   * @retval tick value
 266:Core/Src/stm32f4xx_hal.c ****   */
 267:Core/Src/stm32f4xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 268:Core/Src/stm32f4xx_hal.c **** {
 173              		.loc 1 268 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 269:Core/Src/stm32f4xx_hal.c ****   return uwTick;
 178              		.loc 1 269 0
 179 0000 014B     		ldr	r3, .L15
 180 0002 1868     		ldr	r0, [r3]
 270:Core/Src/stm32f4xx_hal.c **** }
 181              		.loc 1 270 0
 182 0004 7047     		bx	lr
 183              	.L16:
 184 0006 00BF     		.align	2
 185              	.L15:
 186 0008 00000000 		.word	uwTick
 187              		.cfi_endproc
 188              	.LFE134:
 190              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 191              		.align	1
 192              		.global	HAL_GetTickPrio
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 9


 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 196              		.fpu fpv4-sp-d16
 198              	HAL_GetTickPrio:
 199              	.LFB135:
 271:Core/Src/stm32f4xx_hal.c **** 
 272:Core/Src/stm32f4xx_hal.c **** /**
 273:Core/Src/stm32f4xx_hal.c ****   * @brief This function returns a tick priority.
 274:Core/Src/stm32f4xx_hal.c ****   * @retval tick priority
 275:Core/Src/stm32f4xx_hal.c ****   */
 276:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 277:Core/Src/stm32f4xx_hal.c **** {
 200              		.loc 1 277 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 278:Core/Src/stm32f4xx_hal.c ****   return uwTickPrio;
 279:Core/Src/stm32f4xx_hal.c **** }
 205              		.loc 1 279 0
 206 0000 014B     		ldr	r3, .L18
 207 0002 1868     		ldr	r0, [r3]
 208 0004 7047     		bx	lr
 209              	.L19:
 210 0006 00BF     		.align	2
 211              	.L18:
 212 0008 00000000 		.word	.LANCHOR1
 213              		.cfi_endproc
 214              	.LFE135:
 216              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 217              		.align	1
 218              		.global	HAL_SetTickFreq
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	HAL_SetTickFreq:
 225              	.LFB136:
 280:Core/Src/stm32f4xx_hal.c **** 
 281:Core/Src/stm32f4xx_hal.c **** /**
 282:Core/Src/stm32f4xx_hal.c ****   * @brief Set new tick Freq.
 283:Core/Src/stm32f4xx_hal.c ****   * @retval Status
 284:Core/Src/stm32f4xx_hal.c ****   */
 285:Core/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 286:Core/Src/stm32f4xx_hal.c **** {
 226              		.loc 1 286 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              	.LVL7:
 231 0000 10B5     		push	{r4, lr}
 232              	.LCFI1:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
 236              	.LVL8:
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 10


 287:Core/Src/stm32f4xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 288:Core/Src/stm32f4xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 289:Core/Src/stm32f4xx_hal.c **** 
 290:Core/Src/stm32f4xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 291:Core/Src/stm32f4xx_hal.c **** 
 292:Core/Src/stm32f4xx_hal.c ****   if (uwTickFreq != Freq)
 237              		.loc 1 292 0
 238 0002 084B     		ldr	r3, .L24
 239 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 240 0006 8442     		cmp	r4, r0
 241 0008 0AD0     		beq	.L22
 242              	.LVL9:
 293:Core/Src/stm32f4xx_hal.c ****   {
 294:Core/Src/stm32f4xx_hal.c ****     /* Back up uwTickFreq frequency */
 295:Core/Src/stm32f4xx_hal.c ****     prevTickFreq = uwTickFreq;
 296:Core/Src/stm32f4xx_hal.c **** 
 297:Core/Src/stm32f4xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 298:Core/Src/stm32f4xx_hal.c ****     uwTickFreq = Freq;
 243              		.loc 1 298 0
 244 000a 1870     		strb	r0, [r3]
 299:Core/Src/stm32f4xx_hal.c **** 
 300:Core/Src/stm32f4xx_hal.c ****     /* Apply the new tick Freq  */
 301:Core/Src/stm32f4xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 245              		.loc 1 301 0
 246 000c 064B     		ldr	r3, .L24+4
 247 000e 1868     		ldr	r0, [r3]
 248              	.LVL10:
 249 0010 FFF7FEFF 		bl	HAL_InitTick
 250              	.LVL11:
 302:Core/Src/stm32f4xx_hal.c **** 
 303:Core/Src/stm32f4xx_hal.c ****     if (status != HAL_OK)
 251              		.loc 1 303 0
 252 0014 0346     		mov	r3, r0
 253 0016 08B1     		cbz	r0, .L21
 304:Core/Src/stm32f4xx_hal.c ****     {
 305:Core/Src/stm32f4xx_hal.c ****       /* Restore previous tick frequency */
 306:Core/Src/stm32f4xx_hal.c ****       uwTickFreq = prevTickFreq;
 254              		.loc 1 306 0
 255 0018 024A     		ldr	r2, .L24
 256 001a 1470     		strb	r4, [r2]
 257              	.LVL12:
 258              	.L21:
 307:Core/Src/stm32f4xx_hal.c ****     }
 308:Core/Src/stm32f4xx_hal.c ****   }
 309:Core/Src/stm32f4xx_hal.c **** 
 310:Core/Src/stm32f4xx_hal.c ****   return status;
 311:Core/Src/stm32f4xx_hal.c **** }
 259              		.loc 1 311 0
 260 001c 1846     		mov	r0, r3
 261 001e 10BD     		pop	{r4, pc}
 262              	.LVL13:
 263              	.L22:
 287:Core/Src/stm32f4xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 264              		.loc 1 287 0
 265 0020 0023     		movs	r3, #0
 266 0022 FBE7     		b	.L21
 267              	.L25:
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 11


 268              		.align	2
 269              	.L24:
 270 0024 00000000 		.word	.LANCHOR0
 271 0028 00000000 		.word	.LANCHOR1
 272              		.cfi_endproc
 273              	.LFE136:
 275              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 276              		.align	1
 277              		.global	HAL_GetTickFreq
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 281              		.fpu fpv4-sp-d16
 283              	HAL_GetTickFreq:
 284              	.LFB137:
 312:Core/Src/stm32f4xx_hal.c **** 
 313:Core/Src/stm32f4xx_hal.c **** /**
 314:Core/Src/stm32f4xx_hal.c ****   * @brief Return tick frequency.
 315:Core/Src/stm32f4xx_hal.c ****   * @retval Tick frequency.
 316:Core/Src/stm32f4xx_hal.c ****   *         Value of @ref HAL_TickFreqTypeDef.
 317:Core/Src/stm32f4xx_hal.c ****   */
 318:Core/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 319:Core/Src/stm32f4xx_hal.c **** {
 285              		.loc 1 319 0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 320:Core/Src/stm32f4xx_hal.c ****   return uwTickFreq;
 321:Core/Src/stm32f4xx_hal.c **** }
 290              		.loc 1 321 0
 291 0000 014B     		ldr	r3, .L27
 292 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 293 0004 7047     		bx	lr
 294              	.L28:
 295 0006 00BF     		.align	2
 296              	.L27:
 297 0008 00000000 		.word	.LANCHOR0
 298              		.cfi_endproc
 299              	.LFE137:
 301              		.section	.text.HAL_Delay,"ax",%progbits
 302              		.align	1
 303              		.weak	HAL_Delay
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 307              		.fpu fpv4-sp-d16
 309              	HAL_Delay:
 310              	.LFB138:
 322:Core/Src/stm32f4xx_hal.c **** 
 323:Core/Src/stm32f4xx_hal.c **** /**
 324:Core/Src/stm32f4xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 325:Core/Src/stm32f4xx_hal.c ****   *        on variable incremented.
 326:Core/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 327:Core/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 328:Core/Src/stm32f4xx_hal.c ****   *       is incremented.
 329:Core/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 12


 330:Core/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 331:Core/Src/stm32f4xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 332:Core/Src/stm32f4xx_hal.c ****   * @retval None
 333:Core/Src/stm32f4xx_hal.c ****   */
 334:Core/Src/stm32f4xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 335:Core/Src/stm32f4xx_hal.c **** {
 311              		.loc 1 335 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              	.LVL14:
 316 0000 38B5     		push	{r3, r4, r5, lr}
 317              	.LCFI2:
 318              		.cfi_def_cfa_offset 16
 319              		.cfi_offset 3, -16
 320              		.cfi_offset 4, -12
 321              		.cfi_offset 5, -8
 322              		.cfi_offset 14, -4
 323 0002 0446     		mov	r4, r0
 336:Core/Src/stm32f4xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 324              		.loc 1 336 0
 325 0004 FFF7FEFF 		bl	HAL_GetTick
 326              	.LVL15:
 327 0008 0546     		mov	r5, r0
 328              	.LVL16:
 337:Core/Src/stm32f4xx_hal.c ****   uint32_t wait = Delay;
 338:Core/Src/stm32f4xx_hal.c **** 
 339:Core/Src/stm32f4xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 340:Core/Src/stm32f4xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 329              		.loc 1 340 0
 330 000a B4F1FF3F 		cmp	r4, #-1
 331 000e 02D0     		beq	.L31
 341:Core/Src/stm32f4xx_hal.c ****   {
 342:Core/Src/stm32f4xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 332              		.loc 1 342 0
 333 0010 044B     		ldr	r3, .L33
 334 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 0014 1C44     		add	r4, r4, r3
 336              	.LVL17:
 337              	.L31:
 343:Core/Src/stm32f4xx_hal.c ****   }
 344:Core/Src/stm32f4xx_hal.c **** 
 345:Core/Src/stm32f4xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 338              		.loc 1 345 0 discriminator 1
 339 0016 FFF7FEFF 		bl	HAL_GetTick
 340              	.LVL18:
 341 001a 401B     		subs	r0, r0, r5
 342 001c 8442     		cmp	r4, r0
 343 001e FAD8     		bhi	.L31
 346:Core/Src/stm32f4xx_hal.c ****   {
 347:Core/Src/stm32f4xx_hal.c ****   }
 348:Core/Src/stm32f4xx_hal.c **** }
 344              		.loc 1 348 0
 345 0020 38BD     		pop	{r3, r4, r5, pc}
 346              	.LVL19:
 347              	.L34:
 348 0022 00BF     		.align	2
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 13


 349              	.L33:
 350 0024 00000000 		.word	.LANCHOR0
 351              		.cfi_endproc
 352              	.LFE138:
 354              		.section	.text.HAL_SuspendTick,"ax",%progbits
 355              		.align	1
 356              		.weak	HAL_SuspendTick
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 360              		.fpu fpv4-sp-d16
 362              	HAL_SuspendTick:
 363              	.LFB139:
 349:Core/Src/stm32f4xx_hal.c **** 
 350:Core/Src/stm32f4xx_hal.c **** /**
 351:Core/Src/stm32f4xx_hal.c ****   * @brief Suspend Tick increment.
 352:Core/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 353:Core/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 354:Core/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
 355:Core/Src/stm32f4xx_hal.c ****   *       is suspended.
 356:Core/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 357:Core/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 358:Core/Src/stm32f4xx_hal.c ****   * @retval None
 359:Core/Src/stm32f4xx_hal.c ****   */
 360:Core/Src/stm32f4xx_hal.c **** __weak void HAL_SuspendTick(void)
 361:Core/Src/stm32f4xx_hal.c **** {
 364              		.loc 1 361 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 362:Core/Src/stm32f4xx_hal.c ****   /* Disable SysTick Interrupt */
 363:Core/Src/stm32f4xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 369              		.loc 1 363 0
 370 0000 024A     		ldr	r2, .L36
 371 0002 1368     		ldr	r3, [r2]
 372 0004 23F00203 		bic	r3, r3, #2
 373 0008 1360     		str	r3, [r2]
 374 000a 7047     		bx	lr
 375              	.L37:
 376              		.align	2
 377              	.L36:
 378 000c 10E000E0 		.word	-536813552
 379              		.cfi_endproc
 380              	.LFE139:
 382              		.section	.text.HAL_ResumeTick,"ax",%progbits
 383              		.align	1
 384              		.weak	HAL_ResumeTick
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu fpv4-sp-d16
 390              	HAL_ResumeTick:
 391              	.LFB140:
 364:Core/Src/stm32f4xx_hal.c **** }
 365:Core/Src/stm32f4xx_hal.c **** 
 366:Core/Src/stm32f4xx_hal.c **** /**
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 14


 367:Core/Src/stm32f4xx_hal.c ****   * @brief Resume Tick increment.
 368:Core/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 369:Core/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 370:Core/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 371:Core/Src/stm32f4xx_hal.c ****   *       is resumed.
 372:Core/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 373:Core/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 374:Core/Src/stm32f4xx_hal.c ****   * @retval None
 375:Core/Src/stm32f4xx_hal.c ****   */
 376:Core/Src/stm32f4xx_hal.c **** __weak void HAL_ResumeTick(void)
 377:Core/Src/stm32f4xx_hal.c **** {
 392              		.loc 1 377 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 378:Core/Src/stm32f4xx_hal.c ****   /* Enable SysTick Interrupt */
 379:Core/Src/stm32f4xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 397              		.loc 1 379 0
 398 0000 024A     		ldr	r2, .L39
 399 0002 1368     		ldr	r3, [r2]
 400 0004 43F00203 		orr	r3, r3, #2
 401 0008 1360     		str	r3, [r2]
 402 000a 7047     		bx	lr
 403              	.L40:
 404              		.align	2
 405              	.L39:
 406 000c 10E000E0 		.word	-536813552
 407              		.cfi_endproc
 408              	.LFE140:
 410              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 411              		.align	1
 412              		.global	HAL_GetHalVersion
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	HAL_GetHalVersion:
 419              	.LFB141:
 380:Core/Src/stm32f4xx_hal.c **** }
 381:Core/Src/stm32f4xx_hal.c **** 
 382:Core/Src/stm32f4xx_hal.c **** /**
 383:Core/Src/stm32f4xx_hal.c ****   * @brief  Returns the HAL revision
 384:Core/Src/stm32f4xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 385:Core/Src/stm32f4xx_hal.c ****   */
 386:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 387:Core/Src/stm32f4xx_hal.c **** {
 420              		.loc 1 387 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 388:Core/Src/stm32f4xx_hal.c ****   return __STM32F4xx_HAL_VERSION;
 389:Core/Src/stm32f4xx_hal.c **** }
 425              		.loc 1 389 0
 426 0000 0048     		ldr	r0, .L42
 427 0002 7047     		bx	lr
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 15


 428              	.L43:
 429              		.align	2
 430              	.L42:
 431 0004 00030801 		.word	17302272
 432              		.cfi_endproc
 433              	.LFE141:
 435              		.section	.text.HAL_GetREVID,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_GetREVID
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_GetREVID:
 444              	.LFB142:
 390:Core/Src/stm32f4xx_hal.c **** 
 391:Core/Src/stm32f4xx_hal.c **** /**
 392:Core/Src/stm32f4xx_hal.c ****   * @brief  Returns the device revision identifier.
 393:Core/Src/stm32f4xx_hal.c ****   * @retval Device revision identifier
 394:Core/Src/stm32f4xx_hal.c ****   */
 395:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetREVID(void)
 396:Core/Src/stm32f4xx_hal.c **** {
 445              		.loc 1 396 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 397:Core/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 450              		.loc 1 397 0
 451 0000 014B     		ldr	r3, .L45
 452 0002 1868     		ldr	r0, [r3]
 398:Core/Src/stm32f4xx_hal.c **** }
 453              		.loc 1 398 0
 454 0004 000C     		lsrs	r0, r0, #16
 455 0006 7047     		bx	lr
 456              	.L46:
 457              		.align	2
 458              	.L45:
 459 0008 002004E0 		.word	-536600576
 460              		.cfi_endproc
 461              	.LFE142:
 463              		.section	.text.HAL_GetDEVID,"ax",%progbits
 464              		.align	1
 465              		.global	HAL_GetDEVID
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 469              		.fpu fpv4-sp-d16
 471              	HAL_GetDEVID:
 472              	.LFB143:
 399:Core/Src/stm32f4xx_hal.c **** 
 400:Core/Src/stm32f4xx_hal.c **** /**
 401:Core/Src/stm32f4xx_hal.c ****   * @brief  Returns the device identifier.
 402:Core/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 403:Core/Src/stm32f4xx_hal.c ****   */
 404:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetDEVID(void)
 405:Core/Src/stm32f4xx_hal.c **** {
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 16


 473              		.loc 1 405 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 406:Core/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 478              		.loc 1 406 0
 479 0000 024B     		ldr	r3, .L48
 480 0002 1868     		ldr	r0, [r3]
 407:Core/Src/stm32f4xx_hal.c **** }
 481              		.loc 1 407 0
 482 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 483 0008 7047     		bx	lr
 484              	.L49:
 485 000a 00BF     		.align	2
 486              	.L48:
 487 000c 002004E0 		.word	-536600576
 488              		.cfi_endproc
 489              	.LFE143:
 491              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 492              		.align	1
 493              		.global	HAL_DBGMCU_EnableDBGSleepMode
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu fpv4-sp-d16
 499              	HAL_DBGMCU_EnableDBGSleepMode:
 500              	.LFB144:
 408:Core/Src/stm32f4xx_hal.c **** 
 409:Core/Src/stm32f4xx_hal.c **** /**
 410:Core/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 411:Core/Src/stm32f4xx_hal.c ****   * @retval None
 412:Core/Src/stm32f4xx_hal.c ****   */
 413:Core/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 414:Core/Src/stm32f4xx_hal.c **** {
 501              		.loc 1 414 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 415:Core/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 506              		.loc 1 415 0
 507 0000 024A     		ldr	r2, .L51
 508 0002 5368     		ldr	r3, [r2, #4]
 509 0004 43F00103 		orr	r3, r3, #1
 510 0008 5360     		str	r3, [r2, #4]
 511 000a 7047     		bx	lr
 512              	.L52:
 513              		.align	2
 514              	.L51:
 515 000c 002004E0 		.word	-536600576
 516              		.cfi_endproc
 517              	.LFE144:
 519              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 520              		.align	1
 521              		.global	HAL_DBGMCU_DisableDBGSleepMode
 522              		.syntax unified
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 17


 523              		.thumb
 524              		.thumb_func
 525              		.fpu fpv4-sp-d16
 527              	HAL_DBGMCU_DisableDBGSleepMode:
 528              	.LFB145:
 416:Core/Src/stm32f4xx_hal.c **** }
 417:Core/Src/stm32f4xx_hal.c **** 
 418:Core/Src/stm32f4xx_hal.c **** /**
 419:Core/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 420:Core/Src/stm32f4xx_hal.c ****   * @retval None
 421:Core/Src/stm32f4xx_hal.c ****   */
 422:Core/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 423:Core/Src/stm32f4xx_hal.c **** {
 529              		.loc 1 423 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533              		@ link register save eliminated.
 424:Core/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 534              		.loc 1 424 0
 535 0000 024A     		ldr	r2, .L54
 536 0002 5368     		ldr	r3, [r2, #4]
 537 0004 23F00103 		bic	r3, r3, #1
 538 0008 5360     		str	r3, [r2, #4]
 539 000a 7047     		bx	lr
 540              	.L55:
 541              		.align	2
 542              	.L54:
 543 000c 002004E0 		.word	-536600576
 544              		.cfi_endproc
 545              	.LFE145:
 547              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 548              		.align	1
 549              		.global	HAL_DBGMCU_EnableDBGStopMode
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu fpv4-sp-d16
 555              	HAL_DBGMCU_EnableDBGStopMode:
 556              	.LFB146:
 425:Core/Src/stm32f4xx_hal.c **** }
 426:Core/Src/stm32f4xx_hal.c **** 
 427:Core/Src/stm32f4xx_hal.c **** /**
 428:Core/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 429:Core/Src/stm32f4xx_hal.c ****   * @retval None
 430:Core/Src/stm32f4xx_hal.c ****   */
 431:Core/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 432:Core/Src/stm32f4xx_hal.c **** {
 557              		.loc 1 432 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              		@ link register save eliminated.
 433:Core/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 562              		.loc 1 433 0
 563 0000 024A     		ldr	r2, .L57
 564 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 18


 565 0004 43F00203 		orr	r3, r3, #2
 566 0008 5360     		str	r3, [r2, #4]
 567 000a 7047     		bx	lr
 568              	.L58:
 569              		.align	2
 570              	.L57:
 571 000c 002004E0 		.word	-536600576
 572              		.cfi_endproc
 573              	.LFE146:
 575              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 576              		.align	1
 577              		.global	HAL_DBGMCU_DisableDBGStopMode
 578              		.syntax unified
 579              		.thumb
 580              		.thumb_func
 581              		.fpu fpv4-sp-d16
 583              	HAL_DBGMCU_DisableDBGStopMode:
 584              	.LFB147:
 434:Core/Src/stm32f4xx_hal.c **** }
 435:Core/Src/stm32f4xx_hal.c **** 
 436:Core/Src/stm32f4xx_hal.c **** /**
 437:Core/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 438:Core/Src/stm32f4xx_hal.c ****   * @retval None
 439:Core/Src/stm32f4xx_hal.c ****   */
 440:Core/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 441:Core/Src/stm32f4xx_hal.c **** {
 585              		.loc 1 441 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              		@ link register save eliminated.
 442:Core/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 590              		.loc 1 442 0
 591 0000 024A     		ldr	r2, .L60
 592 0002 5368     		ldr	r3, [r2, #4]
 593 0004 23F00203 		bic	r3, r3, #2
 594 0008 5360     		str	r3, [r2, #4]
 595 000a 7047     		bx	lr
 596              	.L61:
 597              		.align	2
 598              	.L60:
 599 000c 002004E0 		.word	-536600576
 600              		.cfi_endproc
 601              	.LFE147:
 603              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 604              		.align	1
 605              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 606              		.syntax unified
 607              		.thumb
 608              		.thumb_func
 609              		.fpu fpv4-sp-d16
 611              	HAL_DBGMCU_EnableDBGStandbyMode:
 612              	.LFB148:
 443:Core/Src/stm32f4xx_hal.c **** }
 444:Core/Src/stm32f4xx_hal.c **** 
 445:Core/Src/stm32f4xx_hal.c **** /**
 446:Core/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 19


 447:Core/Src/stm32f4xx_hal.c ****   * @retval None
 448:Core/Src/stm32f4xx_hal.c ****   */
 449:Core/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 450:Core/Src/stm32f4xx_hal.c **** {
 613              		.loc 1 450 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 0
 616              		@ frame_needed = 0, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 451:Core/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 618              		.loc 1 451 0
 619 0000 024A     		ldr	r2, .L63
 620 0002 5368     		ldr	r3, [r2, #4]
 621 0004 43F00403 		orr	r3, r3, #4
 622 0008 5360     		str	r3, [r2, #4]
 623 000a 7047     		bx	lr
 624              	.L64:
 625              		.align	2
 626              	.L63:
 627 000c 002004E0 		.word	-536600576
 628              		.cfi_endproc
 629              	.LFE148:
 631              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 632              		.align	1
 633              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 634              		.syntax unified
 635              		.thumb
 636              		.thumb_func
 637              		.fpu fpv4-sp-d16
 639              	HAL_DBGMCU_DisableDBGStandbyMode:
 640              	.LFB149:
 452:Core/Src/stm32f4xx_hal.c **** }
 453:Core/Src/stm32f4xx_hal.c **** 
 454:Core/Src/stm32f4xx_hal.c **** /**
 455:Core/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 456:Core/Src/stm32f4xx_hal.c ****   * @retval None
 457:Core/Src/stm32f4xx_hal.c ****   */
 458:Core/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 459:Core/Src/stm32f4xx_hal.c **** {
 641              		.loc 1 459 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 460:Core/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 646              		.loc 1 460 0
 647 0000 024A     		ldr	r2, .L66
 648 0002 5368     		ldr	r3, [r2, #4]
 649 0004 23F00403 		bic	r3, r3, #4
 650 0008 5360     		str	r3, [r2, #4]
 651 000a 7047     		bx	lr
 652              	.L67:
 653              		.align	2
 654              	.L66:
 655 000c 002004E0 		.word	-536600576
 656              		.cfi_endproc
 657              	.LFE149:
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 20


 659              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 660              		.align	1
 661              		.global	HAL_EnableCompensationCell
 662              		.syntax unified
 663              		.thumb
 664              		.thumb_func
 665              		.fpu fpv4-sp-d16
 667              	HAL_EnableCompensationCell:
 668              	.LFB150:
 461:Core/Src/stm32f4xx_hal.c **** }
 462:Core/Src/stm32f4xx_hal.c **** 
 463:Core/Src/stm32f4xx_hal.c **** /**
 464:Core/Src/stm32f4xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 465:Core/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 466:Core/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 467:Core/Src/stm32f4xx_hal.c ****   * @retval None
 468:Core/Src/stm32f4xx_hal.c ****   */
 469:Core/Src/stm32f4xx_hal.c **** void HAL_EnableCompensationCell(void)
 470:Core/Src/stm32f4xx_hal.c **** {
 669              		.loc 1 470 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 0
 672              		@ frame_needed = 0, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 471:Core/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 674              		.loc 1 471 0
 675 0000 0122     		movs	r2, #1
 676 0002 014B     		ldr	r3, .L69
 677 0004 1A60     		str	r2, [r3]
 678 0006 7047     		bx	lr
 679              	.L70:
 680              		.align	2
 681              	.L69:
 682 0008 00042742 		.word	1109853184
 683              		.cfi_endproc
 684              	.LFE150:
 686              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 687              		.align	1
 688              		.global	HAL_DisableCompensationCell
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_DisableCompensationCell:
 695              	.LFB151:
 472:Core/Src/stm32f4xx_hal.c **** }
 473:Core/Src/stm32f4xx_hal.c **** 
 474:Core/Src/stm32f4xx_hal.c **** /**
 475:Core/Src/stm32f4xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 476:Core/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 477:Core/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 478:Core/Src/stm32f4xx_hal.c ****   * @retval None
 479:Core/Src/stm32f4xx_hal.c ****   */
 480:Core/Src/stm32f4xx_hal.c **** void HAL_DisableCompensationCell(void)
 481:Core/Src/stm32f4xx_hal.c **** {
 696              		.loc 1 481 0
 697              		.cfi_startproc
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 21


 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 482:Core/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 701              		.loc 1 482 0
 702 0000 0022     		movs	r2, #0
 703 0002 014B     		ldr	r3, .L72
 704 0004 1A60     		str	r2, [r3]
 705 0006 7047     		bx	lr
 706              	.L73:
 707              		.align	2
 708              	.L72:
 709 0008 00042742 		.word	1109853184
 710              		.cfi_endproc
 711              	.LFE151:
 713              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 714              		.align	1
 715              		.global	HAL_GetUIDw0
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 719              		.fpu fpv4-sp-d16
 721              	HAL_GetUIDw0:
 722              	.LFB152:
 483:Core/Src/stm32f4xx_hal.c **** }
 484:Core/Src/stm32f4xx_hal.c **** 
 485:Core/Src/stm32f4xx_hal.c **** /**
 486:Core/Src/stm32f4xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 487:Core/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 488:Core/Src/stm32f4xx_hal.c ****   */
 489:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 490:Core/Src/stm32f4xx_hal.c **** {
 723              		.loc 1 490 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 491:Core/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 492:Core/Src/stm32f4xx_hal.c **** }
 728              		.loc 1 492 0
 729 0000 014B     		ldr	r3, .L75
 730 0002 1868     		ldr	r0, [r3]
 731 0004 7047     		bx	lr
 732              	.L76:
 733 0006 00BF     		.align	2
 734              	.L75:
 735 0008 107AFF1F 		.word	536836624
 736              		.cfi_endproc
 737              	.LFE152:
 739              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 740              		.align	1
 741              		.global	HAL_GetUIDw1
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 745              		.fpu fpv4-sp-d16
 747              	HAL_GetUIDw1:
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 22


 748              	.LFB153:
 493:Core/Src/stm32f4xx_hal.c **** 
 494:Core/Src/stm32f4xx_hal.c **** /**
 495:Core/Src/stm32f4xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 496:Core/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 497:Core/Src/stm32f4xx_hal.c ****   */
 498:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 499:Core/Src/stm32f4xx_hal.c **** {
 749              		.loc 1 499 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 500:Core/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 501:Core/Src/stm32f4xx_hal.c **** }
 754              		.loc 1 501 0
 755 0000 014B     		ldr	r3, .L78
 756 0002 1868     		ldr	r0, [r3]
 757 0004 7047     		bx	lr
 758              	.L79:
 759 0006 00BF     		.align	2
 760              	.L78:
 761 0008 147AFF1F 		.word	536836628
 762              		.cfi_endproc
 763              	.LFE153:
 765              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_GetUIDw2
 768              		.syntax unified
 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv4-sp-d16
 773              	HAL_GetUIDw2:
 774              	.LFB154:
 502:Core/Src/stm32f4xx_hal.c **** 
 503:Core/Src/stm32f4xx_hal.c **** /**
 504:Core/Src/stm32f4xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 505:Core/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 506:Core/Src/stm32f4xx_hal.c ****   */
 507:Core/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 508:Core/Src/stm32f4xx_hal.c **** {
 775              		.loc 1 508 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 509:Core/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 510:Core/Src/stm32f4xx_hal.c **** }
 780              		.loc 1 510 0
 781 0000 014B     		ldr	r3, .L81
 782 0002 1868     		ldr	r0, [r3]
 783 0004 7047     		bx	lr
 784              	.L82:
 785 0006 00BF     		.align	2
 786              	.L81:
 787 0008 187AFF1F 		.word	536836632
 788              		.cfi_endproc
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 23


 789              	.LFE154:
 791              		.global	uwTickFreq
 792              		.global	uwTickPrio
 793              		.comm	uwTick,4,4
 794              		.section	.data.uwTickFreq,"aw",%progbits
 795              		.set	.LANCHOR0,. + 0
 798              	uwTickFreq:
 799 0000 01       		.byte	1
 800              		.section	.data.uwTickPrio,"aw",%progbits
 801              		.align	2
 802              		.set	.LANCHOR1,. + 0
 805              	uwTickPrio:
 806 0000 10000000 		.word	16
 807              		.text
 808              	.Letext0:
 809              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 810              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 811              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 812              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 813              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 814              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 815              		.file 8 "Core/Inc/stm32f4xx_hal_def.h"
 816              		.file 9 "Core/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal.c
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:18     .text.HAL_MspInit:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:25     .text.HAL_MspInit:00000000 HAL_MspInit
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:38     .text.HAL_MspDeInit:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:57     .text.HAL_InitTick:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:64     .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:125    .text.HAL_InitTick:00000040 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:133    .text.HAL_IncTick:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:140    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:158    .text.HAL_IncTick:00000010 $d
                            *COM*:00000004 uwTick
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:164    .text.HAL_GetTick:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:171    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:186    .text.HAL_GetTick:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:191    .text.HAL_GetTickPrio:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:198    .text.HAL_GetTickPrio:00000000 HAL_GetTickPrio
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:212    .text.HAL_GetTickPrio:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:217    .text.HAL_SetTickFreq:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:224    .text.HAL_SetTickFreq:00000000 HAL_SetTickFreq
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:270    .text.HAL_SetTickFreq:00000024 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:276    .text.HAL_GetTickFreq:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:283    .text.HAL_GetTickFreq:00000000 HAL_GetTickFreq
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:297    .text.HAL_GetTickFreq:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:302    .text.HAL_Delay:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:309    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:350    .text.HAL_Delay:00000024 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:355    .text.HAL_SuspendTick:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:362    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:378    .text.HAL_SuspendTick:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:383    .text.HAL_ResumeTick:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:390    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:406    .text.HAL_ResumeTick:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:411    .text.HAL_GetHalVersion:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:418    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:431    .text.HAL_GetHalVersion:00000004 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:436    .text.HAL_GetREVID:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:443    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:459    .text.HAL_GetREVID:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:464    .text.HAL_GetDEVID:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:471    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:487    .text.HAL_GetDEVID:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:492    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:499    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:515    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:520    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:527    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:543    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:548    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:555    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:571    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:576    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:583    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:599    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:604    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:611    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
ARM GAS  C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s 			page 25


C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:627    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:632    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:639    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:655    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:660    .text.HAL_EnableCompensationCell:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:667    .text.HAL_EnableCompensationCell:00000000 HAL_EnableCompensationCell
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:682    .text.HAL_EnableCompensationCell:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:687    .text.HAL_DisableCompensationCell:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:694    .text.HAL_DisableCompensationCell:00000000 HAL_DisableCompensationCell
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:709    .text.HAL_DisableCompensationCell:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:714    .text.HAL_GetUIDw0:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:721    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:735    .text.HAL_GetUIDw0:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:740    .text.HAL_GetUIDw1:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:747    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:761    .text.HAL_GetUIDw1:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:766    .text.HAL_GetUIDw2:00000000 $t
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:773    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:787    .text.HAL_GetUIDw2:00000008 $d
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:798    .data.uwTickFreq:00000000 uwTickFreq
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:805    .data.uwTickPrio:00000000 uwTickPrio
C:\Users\mdmt3\AppData\Local\Temp\ccshRhQ9.s:801    .data.uwTickPrio:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
